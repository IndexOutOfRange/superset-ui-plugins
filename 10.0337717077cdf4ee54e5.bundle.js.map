{"version":3,"file":"10.0337717077cdf4ee54e5.bundle.js","sources":["webpack:///../superset-ui-preset-chart-xy/src/ScatterPlot/Encoder.ts"],"sourcesContent":["import AbstractEncoder from '../encodeable/AbstractEncoder';\nimport { PartialSpec } from '../encodeable/types/Specification';\nimport { EncodingFromChannelsAndOutputs } from '../encodeable/types/Channel';\n\n/**\n * Define channel types\n */\nconst channelTypes = {\n  fill: 'Color',\n  size: 'Numeric',\n  stroke: 'Color',\n  x: 'X',\n  y: 'Y',\n} as const;\n\nexport type ChannelTypes = typeof channelTypes;\n\n/**\n * Define output type for each channel\n */\nexport interface Outputs {\n  fill: string;\n  size: number;\n  stroke: string;\n  x: number | null;\n  y: number | null;\n}\n\n/**\n * Derive encoding config\n */\nexport type Encoding = EncodingFromChannelsAndOutputs<ChannelTypes, Outputs>;\n\nexport default class Encoder extends AbstractEncoder<ChannelTypes, Outputs> {\n  static readonly DEFAULT_ENCODINGS: Encoding = {\n    fill: { value: '#222' },\n    size: { value: 5 },\n    stroke: { value: 'none' },\n    x: { field: 'x', type: 'quantitative' },\n    y: { field: 'y', type: 'quantitative' },\n  };\n\n  static readonly CHANNEL_OPTIONS = {};\n\n  constructor(spec: PartialSpec<Encoding>) {\n    super(channelTypes, spec, Encoder.DEFAULT_ENCODINGS, Encoder.CHANNEL_OPTIONS);\n  }\n}\n"],"mappings":"AAOA","sourceRoot":""}