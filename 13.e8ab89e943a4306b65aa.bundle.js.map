{"version":3,"file":"13.e8ab89e943a4306b65aa.bundle.js","sources":["webpack:///../superset-ui-preset-chart-xy/src/ScatterPlot/createTooltip.tsx"],"sourcesContent":["/* eslint-disable no-magic-numbers */\n\nimport React from 'react';\nimport TooltipFrame from '../components/tooltip/TooltipFrame';\nimport TooltipTable from '../components/tooltip/TooltipTable';\nimport Encoder from './Encoder';\nimport { isFieldDef } from '../encodeable/types/ChannelDef';\nimport { EncodedPoint } from './ScatterPlot';\n\nexport default function createTooltip(encoder: Encoder) {\n  function Tooltip({ datum }: { datum: EncodedPoint }) {\n    const { channels, commonChannels } = encoder;\n    const { x, y, size, fill, stroke } = channels;\n\n    const tooltipRows = [\n      { key: 'x', keyColumn: x.getTitle(), valueColumn: x.format(datum.data) },\n      { key: 'y', keyColumn: y.getTitle(), valueColumn: y.format(datum.data) },\n    ];\n\n    if (isFieldDef(fill.definition)) {\n      tooltipRows.push({\n        key: 'fill',\n        keyColumn: fill.getTitle(),\n        valueColumn: fill.format(datum.data),\n      });\n    }\n    if (isFieldDef(stroke.definition)) {\n      tooltipRows.push({\n        key: 'stroke',\n        keyColumn: stroke.getTitle(),\n        valueColumn: stroke.format(datum.data),\n      });\n    }\n    if (isFieldDef(size.definition)) {\n      tooltipRows.push({\n        key: 'size',\n        keyColumn: size.getTitle(),\n        valueColumn: size.format(datum.data),\n      });\n    }\n    commonChannels.group.forEach(g => {\n      tooltipRows.push({\n        key: `${g.name}`,\n        keyColumn: g.getTitle(),\n        valueColumn: g.format(datum.data),\n      });\n    });\n\n    return (\n      <TooltipFrame>\n        <TooltipTable data={tooltipRows} />\n      </TooltipFrame>\n    );\n  }\n\n  return Tooltip;\n}\n"],"mappings":"AASA","sourceRoot":""}