{"version":3,"file":"12.296d1236b1e8c67ec168.bundle.js","sources":["webpack:///../superset-ui-preset-chart-xy/src/Line/DefaultTooltipRenderer.tsx"],"sourcesContent":["/* eslint-disable no-magic-numbers */\n\nimport React from 'react';\nimport { chartTheme } from '@data-ui/theme';\nimport TooltipFrame from '../components/tooltip/TooltipFrame';\nimport TooltipTable from '../components/tooltip/TooltipTable';\nimport { TooltipInput } from './Line';\n\nconst MARK_STYLE = { marginRight: 4 };\n\nexport default function DefaultTooltipRenderer({\n  allSeries,\n  datum,\n  encoder,\n  series = {},\n  theme = chartTheme,\n}: TooltipInput) {\n  return (\n    <TooltipFrame>\n      <>\n        <div style={{ fontFamily: theme.labelStyles.fontFamily }}>\n          <strong>{encoder.channels.x.formatValue(datum.x)}</strong>\n        </div>\n        <br />\n        {series && (\n          <TooltipTable\n            data={allSeries\n              .filter(({ key }) => series[key])\n              .concat()\n              .sort((a, b) => series[b.key].y - series[a.key].y)\n              .map(({ key, stroke, strokeDasharray }) => ({\n                key,\n                keyColumn: (\n                  <>\n                    <svg width=\"12\" height=\"8\" style={MARK_STYLE}>\n                      <line\n                        x2=\"12\"\n                        y1=\"3\"\n                        y2=\"3\"\n                        stroke={stroke}\n                        strokeWidth=\"2\"\n                        strokeDasharray={strokeDasharray}\n                      />\n                    </svg>\n                    {series[key] === datum ? <b>{key}</b> : key}\n                  </>\n                ),\n                valueColumn: encoder.channels.y.formatValue(series[key].y),\n              }))}\n          />\n        )}\n      </>\n    </TooltipFrame>\n  );\n}\n"],"mappings":"AAQA","sourceRoot":""}